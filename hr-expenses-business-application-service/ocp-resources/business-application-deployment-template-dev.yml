---
kind: Template
apiVersion: v1
metadata:
  annotations:
    iconClass: icon-jboss
    tags: rhpam,springboot
    openshift.io/display-name: RH PAM Springboot Test/Prod Environment
    description: Application Template to rollout a Springboot based RHPAM App in Test and Prod environments
    template.openshift.io/documentation-url: https://github.com/skoussou/springboot-business-app.git
  name: rhpam-springboot-app-deploy
labels:
  template: rhpam-springboot-app-deploy
message: |-
  An image of the springboot app has already been built in the Image Stream Namespace

      ImageStream Namespace: ${IMAGE_STREAM_NAMESPACE}
      ImageStream : ${IMAGE_STREAM}
      Deployment Namespace: ${NAMESPACE_TO_DEPLOY}
parameters:
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams this Springboot Business Application images are installed. 
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
- displayName: ImageStream Name
  description: Name of the ImageStream this Springboot Business Application images are registered against.
  name: IMAGE_STREAM_NAME
  value: business-application-service
- displayName: ImageStream Tag
  description: A named pointer to an image in an image stream. Default is "7.6.0".
  name: IMAGE_STREAM_TAG
  required: true
- displayName: Namespace
  description: The name of the namespace where this will be created in
  name: NAMESPACE_TO_DEPLOY
  required: true
- displayName: Containername
  description: The name of the Containername
  name: CONTAINER_NAME
  required: true
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${IMAGE_STREAM_NAME}"
    labels:
      app: "${IMAGE_STREAM_NAME}"
      version: "${IMAGE_STREAM_TAG}"
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
  spec:
    strategy:
      rollingParams:
        maxSurge: 100%
        maxUnavailable: 0
      type: Rolling
    triggers:
    - type: ConfigChange            
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - "${CONTAINER_NAME}"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_STREAM_NAMESPACE}"
          name: "${IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}"
    replicas: 1
    selector:
      deploymentConfig: "${IMAGE_STREAM_NAME}"
    template:
      metadata:
        name: "${NAMESPACE_TO_DEPLOY}-${CONTAINER_NAME}"
        labels:
          deploymentConfig: "${IMAGE_STREAM_NAME}"
          app: "${IMAGE_STREAM_NAME}"
          version: "${IMAGE_STREAM_TAG}"
      spec:
        terminationGracePeriodSeconds: 60
        containers:
        - name: "${CONTAINER_NAME}"
          image: image-registry.openshift-image-registry.svc:5000/${IMAGE_STREAM_NAMESPACE}/${IMAGE_STREAM_NAME}
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 8090
            protocol: TCP
          volumeMounts:
          - name: application-config
            mountPath: "/deployments/config"
            readOnly: true
          env:
          - name: GC_MAX_METASPACE_SIZE
            value: "512"
          - name: JAVA_OPTS_APPEND
            value: >-
              -Dorg.kie.server.controller=ws://expenses-dev-rhpamcentrmon:8080/controller/websocket/controller
              -Dorg.kie.server.controller.user=user
              -Dorg.kie.server.controller.pwd=user
              -Dorg.kie.server.controller.connect=10000
              -Dorg.kie.server.location=http://hr-expenses-business-application-service-properties:8090/rest/server
              -DSERVICE_NAME=http://hr-expenses-validations-business-service:8090/rest/server 
              -DSERVICE_USERNAME=user
              -DSERVICE_PASSWORD=user
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        volumes:
        - configMap:
            items:
            - key: application-openshift-dev.properties
              path: application-openshift.properties
            name: hr-expenses-business-application-service-properties
          name: application-config
- kind: Service
  apiVersion: v1
  metadata:
    name: "${IMAGE_STREAM_NAME}"
    labels:
      app: "${IMAGE_STREAM_NAME}"
  spec:
    ports:
    - name: http
      protocol: TCP
      port: 8090
      targetPort: 8090
    selector:
      deploymentConfig: "${IMAGE_STREAM_NAME}"
    type: ClusterIP
- kind: Route
  apiVersion: v1
  id: "${CONTAINER_NAME}"
  metadata:
    name: "${CONTAINER_NAME}"
    labels:
      app: "${IMAGE_STREAM_NAME}"
  spec:
    to:
      kind: Service
      name: "${IMAGE_STREAM_NAME}"
    port:
      targetPort: 8090



