#
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#common-application-properties
#
#server configuration
server.address=0.0.0.0
server.port=8090

cxf.path=/rest

#kie server config
kieserver.serverId=hr-expenses-business-application-service
kieserver.serverName=hr-expenses-business-application-service
kieserver.location=http://hr-expenses-business-application-service:8090/rest/server

#kie server capabilities
kieserver.drools.enabled=true
kieserver.dmn.enabled=true
kieserver.jbpm.enabled=true
kieserver.jbpmui.enabled=true
kieserver.casemgmt.enabled=true
#kieserver.prometheus.enabled=true



#jbpm configuration
jbpm.executor.enabled=false
#jbpm.executor.retries=5
#jbpm.executor.interval=3
#jbpm.executor.threadPoolSize=1
#jbpm.executor.timeUnit=SECONDS


# Pool configs
spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
narayana.dbcp.enabled=true
narayana.dbcp.maxTotal=20
spring.jpa.database=POSTGRESQL
spring.datasource.narayana.dbcp.validation-query=select 1
spring.datasource.narayana.dbcp.max-wait-millis=10000
spring.datasource.narayana.dbcp.min-idle=5
spring.datasource.narayana.dbcp.initial-size=10
spring.datasource.narayana.dbcp.test-on-create = true
spring.datasource.narayana.dbcp.test-on-borrow = true
spring.datasource.narayana.dbcp.timeBetweenEvictionRunsMillis = 3600000
spring.datasource.narayana.dbcp.validation-interval=0

# mysql
spring.datasource.username=jbpm
spring.datasource.password=jbpm
spring.datasource.url=jdbc:mysql://pam-mysql:3306/jbpm
spring.datasource.driver-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource

#hibernate configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#data source configuration
#spring.datasource.username=admin
#spring.datasource.password=adminadmin
#spring.datasource.url=jdbc:postgresql://d4f59adc-be40-454b-bda9-cf996db7f734.bc28ac43cf10402584b5f01db462d330.databases.appdomain.cloud:30568/rhpam_hr_expenses_dev
#spring.datasource.driver-class-name=org.postgresql.xa.PGXADataSource

#hibernate configuration
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.show_sql=false
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#transaction manager configuration
spring.jta.narayana.transaction-manager-id=1

#banner
spring.banner.location=classpath:banner.txt

kieserver.swagger.enabled=true


#KEYCLOAK ADDITIONS
#Detaild Config Info: https://www.keycloak.org/docs/latest/securing_apps/index.html#_java_adapter_config

#keycloak.auth-server-url=https://secure-sso-expenses-dev.apps.cluster-demo-d3f8.demo-d3f8.example.opentlc.com/auth
keycloak.auth-server-url=${SSO_AUTH_SERVER_URL}
keycloak.realm=master
keycloak.resource=demoapp
keycloak.public-client=false
keycloak.principal-attribute=preferred_username
# secret for 'demoapp' in secure-sso-expenses-dev
keycloak.credentials.secret=1daa57a2-b60e-468b-a3ac-25bd2dc2eadc
keycloak.use-resource-role-mappings=true #if you want to operate with the client roles, you should add this to your configuration
#keycloak.bearer-only=true
keycloak.no-check-certificate=true
keycloak.disable-trust-manager=true
keycloak.enable-cors=true

# Keycloak realm public key
jwt.public-key=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoETnPmN55xBJjRzN/cs30OzJ9olkteLVNRjzdTxFOyRtS2ovDfzdhhO9XzUcTMbIsCOAZtSt8K+6yvBXypOSYvI75EUdypmkcK1KoptqY5KEBQ1KwhWuP7IWQ0fshUwD6jI1QWDfGxfM/h34FvEn/0tJ71xN2P8TI2YanwuDZgosdobx/PAvlGREBGuk4BgmexTOkAdnFxIUQcCkiEZ2C41uCrxiS4CEe5OX91aK9HKZV4ZJX6vnqMHmdDnsMdO+UFtxOBYZio+a1jP4W3d7J5fGeiOaXjQCOpivKnP2yU2DPdWmDMyVb67l8DRA+jh0OJFKZ5H2fNgE3II59vdsRwIDAQAB
# 19.3 OAuth2 Resource Server (https://docs.spring.io/spring-security/site/docs/5.2.0.M2/reference/html/webflux-oauth2.html#webflux-oauth2-resource-server)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${SSO_AUTH_SERVER_URL}/realms/master
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${SSO_AUTH_SERVER_URL}/realms/master/protocol/openid-connect/certs




# warning about following in real use cases
keycloak.ssl-required=none

# previous working disabling for above trial
#keycloak.auth-server-url=https://sso-dev-demo.apps.cluster-6681.6681.example.opentlc.com/auth
#keycloak.realm=kie-realm-dev
#keycloak.resource=pam-client-service
#keycloak.public-client=false
#keycloak.principal-attribute=preferred_username
#keycloak.enable-basic-auth=false
## secret for 'pam-client-service' in sso-ahmet-rhpam
#keycloak.credentials.secret=13aed6ae-a841-449b-95f5-237b9240ba50
#keycloak.use-resource-role-mappings=true #if you want to operate with the client roles, you should add this to your configuration
##keycloak.bearer-only=true

logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

logging.level.org.slf4j.simpleLogger.defaultLogLevel=DEBUG
logging.level.org.kie.server.client=DEBUG

logging.level.org.keycloak=DEBUG
